name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 16 * * 5'
  # Trigger the workflow when it is manually triggered
  workflow_dispatch:

jobs:
  build:
    name: Install and test MatCUTEst
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
        matlab: [R2020a, R2020b, R2021a, R2021b, R2022a, R2022b, latest]
        #list: [full, customized, test]
        list: [full]
        #list: [new]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Clone PRIMA
        uses: actions/checkout@v3
        with:
          repository: libprima/prima
          path: prima

      - name: Install 7z
        run: sudo apt install p7zip-full

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          GFVER=12
          if [[ "${{ matrix.os }}" = "ubuntu-20.04" ]] ; then
              GFVER=11
          fi
          if [[ "${{ matrix.matlab }}" = "R2020a" || "${{ matrix.matlab }}" = "R2020b" \
             || "${{ matrix.matlab }}" = "R2021a" || "${{ matrix.matlab }}" = "R2021b" ]] ; then
              GFVER=9
          fi
          bash .github/scripts/link_gfortran "$GFVER"

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Check MATLAB
        id: check_matlab
        run: if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Set up MATLAB
        if: ${{ steps.check_matlab.outputs.has_matlab != 'true' }}
        uses: matlab-actions/setup-matlab@v1.2.4
        with:
          release: ${{ matrix.matlab }}

      - name: Revise the installation script according to the list
        run: |
          PKG_DFT=full.matcutest.7z.001
          PKG=${{ matrix.list }}.matcutest.7z.001
          sed -i "s|$PKG_DFT|$PKG|g" ./install.m

      - name: Install and test MatCUTEst
        uses: matlab-actions/run-command@v1.1.2
        with:
          command: |
            ver;
            root_dir = cd()

            install();

            cd(getenv('HOME'));
            help matcutest
            which macup

            req = []; req.blacklist = github_black_list(); req.maxdim=20000; req.maxcon=40000;
            badlist = chcup(secup(req), 1)
            if ~isempty(badlist)
                error('Some problems did not pass the checking.');
            end

            cd(fullfile(root_dir, 'prima', 'matlab', 'tests'));
            opt.blacklist = {};
            profile('uobyqa', 'seq', opt);
            profile('newuoa', 'seq', opt);
            profile('bobyqa', 'seq', 'b', opt);
            profile('lincoa', 'seq', 'l', opt);
            profile('cobyla', 'seq', 'n', opt);
            mkdir(fullfile(root_dir, 'matcutest.compiled'));
            copyfile('./testdata/*summary*.pdf', fullfile(root_dir, 'matcutest.compiled'));
            copyfile('./testdata/*problems.txt', fullfile(root_dir, 'matcutest.compiled'));

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            matcutest.compiled
